v2.0.0:

Major changes:
 - general: switched to MIT license
 - general: added support for WebAssembly (pure SDL, or SDL + OpenGL ES3)
 - general: dropped support for C++ version earlier than C++17
 - input: added SDL input implementation
 - input: removed OIS input implementation
 - input: removed GLFW input implementation
 - gui: added a pure SFML implementation for the rendering
 - gui: added a pure SDL implementation for the rendering
 - gui: added a faster OpenGL 3 implementation, alternative to fixed pipeline legacy OpenGL
 - gui: added documentation for the Lua API
 - gui: added support for high-DPI systems using a global scaling factor (with hints from OS)
 - gui: added vertex_cache to speed up rendering (only available with OpenGL renderer)
 - gui: added texture atlases to speed up rendering (best enabled only if vertex cache is supported)
 - gui: the order in which widgets are created from XML is now tightly specified. For any frame:
    - the frame itself is created (without any of its regions or children)
    - the special regions are parsed (e.g., slider thumb texture, button texture, etc.)
    - the regions are created, in order of declaration in the XML file
    - the special frames are parsed (e.g., scroll child)
    - the children frames are created, in order of declaration in the XML file

Other changes:
 - general: various fixes and improvements to the build system
 - general: fixed various warnings and minor bugs detected by clang
 - general: moved away from using reference-counted smart pointers whenever possible
 - general: moved all code into the lxgui namespace
 - general: exceptions now inherit from std::exception
 - general: moved all enums to C++11 enum class
 - general: added C++11 noexcept specifiers where appropriate
 - general: removed foreach() macro in favor of C++11 range-based for loop
 - general: use override instead of virtual whenever applicable
 - general: made all single argument constructors explicit where appropriate
 - general: removed lua::var (custom std::any) and added utils::variant (using std::variant)
 - general: renamed "sensibility" to "sensitivity"
 - general: renamed "overed" to "hovered"
 - general: now using non-static data member initialisers whenever possible
 - utils: removed broken custom code for UTF8-UTF32 conversion and use a library instead
 - lua: added support for Lua versions later than 5.1
 - lua: removed unusual constructs to serialize a table
 - lua: starting switching to sol2 to manage the Lua state
 - input: simplified class hierarchy by merging handler+handler_impl into input::source
 - input: vastly improved performance of SFML input implementation
 - input: get_key_name() is now platform-independent, and only returns English
 - input: added set_mouse_cursor() and reset_mouse_cursor()
 - input: added get_interface_scaling_factor_hint()
 - input: added set_interface_scaling_factor()
 - gui: added error message when trying to anchor to an object managed by another renderer
 - gui: added error message when trying to anchor to a "$parent..." when there is no parent
 - gui: added support for nested manually-rendered objects (scroll frame inside scroll frame)
 - gui: added renderer::set_view() to allow arbitrary view transforms
 - gui: added color::from_hsv and color::to_hsv
 - gui: added support for custom frame/layered_region factory functions
 - gui: added EditBox:set_font Lua function
 - gui: renamed gui::manager_impl into gui::renderer
 - gui: renamed gui::gl::manager into gui::gl::renderer
 - gui: renamed gui::gl::matrix4f into gui::matrix4f and reworked internals of the class
 - gui: renamed frame::on into frame::on_script
 - gui: renamed frame::fire_build_layer_list into frame::notify_layers_need_update
 - gui: renamed frame_renderer::fire_redraw into notify_strata_needs_redraw
 - gui: renamed uiobject::fire_udpate_borders to uiobject::notify_borders_need_update
 - gui: renamed color::chanel to color::channel
 - gui: removed Frame:on from Lua API (instead, call scripts directly, e.g.: frame:on_update())
 - gui: frame::on_script now takes the full script name ("OnUpdate" vs "Update")
 - gui: sprite is now a value type
 - gui: the GUI will now properly handle render window being resized
 - gui: all UI objects are now managed with explicit single ownership (unique_ptr)
 - gui: added frame_renderer class interface to clarify the frame class
 - gui: only frames can now be flagged as having a frame_renderer
 - gui: "frame_level" has been renamed to just "level"
 - gui: frame::get_children and frame::get_regions return views rather than containers
 - gui: added gui::down_cast for safer down casting
 - gui: removed clear_links() in favor of using destructors
 - gui: added mechanism to handle most cases where a widget is destroyed in a callback
 - gui: relative sizing is now only applicable to XML <Size>
 - gui: added OnReceiveDrag for frame
 - gui: added OnCursorChanged for edit_box
 - gui: added OnUpPressed and OnDownPressed callbacks to edit_box
 - gui: added set_cursor_position()/get_cursor_position() to edit_box
 - gui: added clear_history() to edit_box
 - gui: added clipboard support to edit_box
 - gui: added automatic un-focus of edit_box when clicking outside of the box
 - gui: render targets can now have texture filtering other than nearest
 - gui: improved peformance of "update borders" notifications
 - gui: improved peformance of generating new object IDs
 - gui: fixed rare crash in edit_box
 - gui: fixed crash when calling Lua delete_frame() twice on same frame
 - gui: fixed Lua get_width()/get_height() returning incorrect values
 - gui: fixed crash when currently hovered/focussed frame is deleted
 - gui: fixed virtual gui::scroll_frame not able to be inherited from
 - gui: fixed frame OnSizeChanged not always triggered
 - gui: fixed text coloring not working when applied to first character of a manual new line
 - gui: fixed text coloring not working correctly when immediately reset with |r
 - gui: fixed up/down keys for single-line edit_box just moving the cursor and not using history
 - gui: fixed left/right keys not moving the carret as expected when text is selected in edit_box
 - gui: fixed crash when inherited child's name is already taken
 - gui: fixed incorrect handling of optional parameter in Frame:enable_mouse() lua function
 - gui: fixed Frame:get_script() always returning nil
 - gui: fixed edit_box stealing mouse click events from other frames
 - gui: fixed edit_box carret appearing after set_text() even if the box is not focussed
 - gui: fixed edit_box getting stuck when pressing Backspace to delete all partially-displayed text
 - gui: fixed edit_box integer_only setting not always checking for validity of the current content
 - gui: fixed edit_box numeric-only mode not accepting input correctly
 - gui: fixed FontString:set_font() outline flags not handled correctly
 - gui: fixed scroll_frame not propagating all size updates to its scroll child
 - gui: fixed is_visible() for layered_regions always returning false
 - gui: fixed hovered frame not updated when hide/show is called
 - gui: fixed OnEnter/OnLeave not always triggered hide/show is called
 - gui: fixed set_alpha() not doing anything
 - xml: now parsing standard XML comments

v1.2.0:
 - added support for MSVC 2010
 - gui: added the quad2<T> type
 - gui::layer: added missing default constructor
 - gui::text, gui::font_string, gui::edit_box: cleaned some UTF8 to unicode conversions
 - gui::manager: fixed bug when parsing empty lines in toc files
 - xml::document: fixed bug with multiline comments
 - various fixes detected by MSVC

v1.1.6:
 - colors can now be given with the standard '#RRGGBB[AA]' format (both in C++ and XML/Lua)
 - gui::color: added hue/luminosity/saturation operations and istream >> operator

v1.1.5:
 - gui::texture: added texture filtering mode (none or linear)

v1.1.4:
 - gui: uiobject types should now have a CLASS_NAME static member containing the class name
 - gui::frame: create_child() and create_region() can now have a template argument to cast their return value
 - gui::manager: create_frame() can now have a template argument to cast its return value
 - gui::manager: added new versions of register_frame_type() and register_region_type()
 - note: the older versions of the above two are deprecated (will be removed in the future)
 - replaced remaining "can't", "couldn't", "doesn't" in error messages
 - test: now also displaying the C++ created frames by default (check of the recent template stuff)

v1.1.3:
 - gui::event::get() now has a template version, shortcut to the underlying lua::var
 - lua: improved performances of lua::var

v1.1.2:
 - replaced "can't" by "cannot" in error messages

v1.1.1:
 - gui::frame: get_child() and get_region() can now have a template argument to cast their return value
 - gui::frame: the above two functions can now find objects with their relative names
 - gui::uiobject: added set_abs_dimensions() and set_rel_dimensions()

v1.1.0:
 - added Findlxgui.cmake helper to locate the library with CMake
 - changed the version number of the library to 1.1 in the CMake scripts (for future release)
 - added the lxgui.hpp file (contains the version number of the library)

v1.0.32:
 - added CMake build scripts

v1.0.31:
 - fixed 64bit build
 - input: fixed GLFW Linux implementation
 - gui::slider: fixed uninitialized variable

v1.0.29:
 - gui::frame: can now use std::function as script handler
 - gui::backdrop: can now change vertex color
 - gui::uiobject: the last two arguments of set_abs_point() and set_rel_point() are now optional (default: 0)

v1.0.28:
 - input: SFML and GLFW implementations now provide mouse delta information

v1.0.27:
 - gui::manager: fixed const-correctness of render_ui()

v1.0.26:
 - updating parts of the code to use C++11

v1.0.25:
 - input: renamed the GLFW implementation from input_glfw to input_glfw2 (anticipating the release of GLFW3)

v1.0.24:
 - input: added a new implementation for GLFW (not fully functional: no keyboard layout independence input and no mouse grab)

v1.0.23:
 - input: fixed Windows code of the SFML input handler

v1.0.22:
 - input: implemented mouse wheel for the SFML handler
 - input: renamed input::sfml_handler::on_text_entered() to a more generic on_sfml_event()
 - gui::edit_box: fixed focus not always being removed when hiding an edit_box
 - gui::manager: removed a remaining reference to gui::locale

v1.0.21:
 - input: fixed outputting the 'A' key press when an unkown key is pressed for the SFML handler (fix from SFML)

v1.0.20:
 - input: improved the output of get_key_name() for the SFML handler (names will still always be in english though)
 - gui test: removed virtual build targets from the code::blocks project file

v1.0.19: (warning: API breaking update)
 - input: removed the locale class (now useless, see below)
 - input: added a way to get system interpreted keyboard characters
 - input: get_key_name() is now implementation dependent
 - input: to be fully functional, the SFML handler now needs to be notified of window events (see the test application)
 - input: mouse grab is not a feature required for all input handlers (added implementation for OIS handler)
 - gui: fixed class names in lua::functions not being capitalized
 - gui: added missing "reverse" flag to StatusBar
 - gui::edit_box: updated to use the new key localization system
 - gui::manager: fixed saved variables directory not being created
 - gui::manager: now using lower case folders by default
 - lua: improved exception message when casting a lua::var to a wrong type
 - utils: fixed make_directory() when some directories already extist

v1.0.18:
 - using std::ifstream and std::ofstream instead of std::fstream all the time
 - input: updated the SFML handler to the lastest SFML 2.0 snapshot
 - gui::manager: fixed bug with windows line endings when reading addons.txt

v1.0.17:
 - input: implemented mouse grab in SFML handler (toggle_mouse_grab())
 - input: added a get_impl() method to input::handler

v1.0.16:
 - input: fixed some input data not being properly updated when using manually updated input::handlers
 - input: fixed focus not being properly removed when calling set_focus(false)
 - gui::focus_frame: fixed set_focus(false) removing any focus even if the frame wasn't focused in the first place
 - gui::manager: fixed request_focus() doing useless work if the requested focus is already focused

v1.0.15:
 - input: fixed SFML handler not giving mouse position relative to the window, but to the desktop
 - input: fixed wrong logic in input::manager::force_input_allowed()
 - gui::frame: using std::set instead of std::map (redundant information)
 - gui::edit_box: added missing "positive" and "integer" parameters to the UI XML definition file
 - gui::anchor: removed useless warning when an anchor has no parent
 - lua: added lua::state::push_userdata() and lua::state::get_userdata()
 - lua: fixed const correctness of lua::var::operator!=()
 - utils: addded utils::make_directory()

v1.0.14:
 - input: added screen relative mouse movement
 - utils: added uchar typedef
 - utils: ustring (unicode string) is now using char32_t instead of unsiged int interally
 - gui test: added an accentuated character to check that unicode characters are properly displayed

v1.0.13:
 - improved doxygen documentation for disk usage (not using directories)

v1.0.12:
 - made lua::state, lua::function and lua::argument explictely non copiable classes

v1.0.11:
 - fixed new render strata not being rendered when caching is enabled

v1.0.10:
 - fixed frame_strata::HIGH being misspelled as frame_strata::HPPIGH (careless find & replace)
 - removed old and unused code in gui::backdrop

v1.0.9:
 - fixed input::manager::mouse_last_dragged() not working

v1.0.8:
 - fixed code::blocks project files

v1.0.7:
 - fixed bug introduced in last version (uninitialized variable)

v1.0.6:
 - fixed badly formatted error message in xml library

v1.0.5:
 - fixed missing documentation for input::handler and input::handler_impl
 - added a "manually updated" flag to input::handler, so that is can be shared by several input::managers (hence several gui::managers)

v1.0.4:
 - changed the project's directory structure
 - fixed missing constructor and destructor for gui::strata

v1.0.3:
 - changed licence from GPL to LGPL

v1.0.0:
 - first version
